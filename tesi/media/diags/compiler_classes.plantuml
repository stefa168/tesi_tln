@startuml
' !theme carbon-gray
hide empty methods
' !pragma layout smetana
' left to right direction
skinparam linetype ortho


abstract class Step {
    + name : String
    + type: String
    + description: String | Null
    + resolve_requirements(context: Map<String, Map<String, Object>>)
    + {abstract} execute(inputs: Map<String, Object>, context: Map<String, Map<String, Object>>)
    + verify_execution(outputs: Map<String, Object>)
}

class CompilerConfigV2 {
    + name : String
    + use_wandb : boolean
    + models : List<Model>
    + flows : Map<String, Flow>
}
class Model {
    + name : String
    + type: ModelTypeEnum
    + steps : List<Step>
}

class LoadCsvStep {
    + path: Path
    + label_columns : String | List<String>
}
class SplitDataStep  {
    + dataframe: Pandas.Dataframe
    + on_column: String
    + for_each: List<Step>
}
class TrainBertSequenceClassifierStep  {
    + dataframe: Pandas.Dataframe
    + pretrained_model: PreTrainedModel
    + examples_column: String
    + labels_column: String
    + train_epochs : int
    + resulting_model_name: Optional<String>
}
class TrainSpacyNerModelStep  {
    + language: String
    + training_data_path: Path
    + training_device: "cpu" | "gpu"
    + resulting_model_name: Optional<String>
}

CompilerConfigV2 --> Model
Model -down-> Step
LoadCsvStep -up-|> Step
SplitDataStep -up-|> Step
TrainBertSequenceClassifierStep -[hidden]down-> LoadCsvStep
TrainBertSequenceClassifierStep -up-|> Step
TrainSpacyNerModelStep -[hidden]down-> SplitDataStep
TrainSpacyNerModelStep -up-|> Step

@enduml